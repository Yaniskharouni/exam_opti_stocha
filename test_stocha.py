# -*- coding: utf-8 -*-
"""test_stocha.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/105ufxLfyBJRin-DdLE2r9wAYSxe-yFRR
"""

import numpy as np
import math
from math import sqrt,sin,cos

def f(w):
  r1=418.9829 + w*sin(sqrt(abs(w)))
  return r1

def grad(w) :  
  d =sin(sqrt(abs(w))) + w*((cos(sqrt(abs(w))))/2*sqrt(abs(w)))
  return d

#affecter les wi
w=[]
for i in range(-500,501):
  w.append(i)
print(w)

#affichage
import tensorflow as tf

x = []
y = []
for i in range(-500,500):
  x.append(i)


for i in x:
  y.append(f(x[i]))

print(y)
plt.plot(x,y)  
plt.show()
#print(y)
#pass

def gd_momentum(x, grad, alpha, beta=0.9, max_iter=10):
    xs = np.zeros(1 + max_iter)
    xs[0] = x
    v = 0
    for i in range(max_iter):
        v = beta*v + (1-beta)*grad(x)
        vc = v/(1+beta**(i+1))
        x = x - alpha * vc
        xs[i+1] = x
    return xs

def gd2_rmsprop(x, grad, alpha, beta=0.9, eps=1e-8, max_iter=10):
    xs = np.zeros((1 + max_iter, x.shape[0]))
    xs[0, :] = x
    v = 0
    for i in range(max_iter):
        v = beta*v + (1-beta)*grad(x)**2
        x = x - alpha * grad(x) / (eps + np.sqrt(v))
        xs[i+1, :] = x
    return xs

r=gd_momentum(20,grad,0.002,0.9,15)

print("momentum : ",r)

#deux dimension
def f1(d,w):
  r1=418.9829*1 
  r2=0
  for i in range(d):
    r2 += w[i]*sin(sqrt(abs(w[i])))
  return r1+r2

def grad2(d,w) :
  dd = 418,9829
  dw = sin(sqrt(abs(w))) + w*((cos(sqrt(abs(w))))/2*sqrt(abs(w)))

def gd2_momentum(x, grad, alpha, beta=0.9, max_iter=10):
    xs = np.zeros((1 + max_iter, len(x)))
    xs[0, :] = x
    v = 0
    for i in range(max_iter):
        v = beta*v + (1-beta)*grad2(2,x)
        vc = v/(1+beta**(i+1))
        x = x - alpha * vc
        xs[i+1, :] = x
    return xs

gd2_momentum(w, grad2, 0.02,0.9, 10)

#amir.nakib@cyclope.ai